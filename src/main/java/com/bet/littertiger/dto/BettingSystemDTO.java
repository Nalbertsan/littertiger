package com.bet.littertiger.dto;

import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.gas.ContractGasProvider;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.TypeReference;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class BettingSystemDTO extends Contract {

    public static final String ABI = "[\n" +
            "    {\n" +
            "      \"anonymous\": false,\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"indexed\": true,\n" +
            "          \"internalType\": \"address\",\n" +
            "          \"name\": \"user\",\n" +
            "          \"type\": \"address\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"eventId\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"outcome\",\n" +
            "          \"type\": \"string\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"amount\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"BetPlaced\",\n" +
            "      \"type\": \"event\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"anonymous\": false,\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"indexed\": true,\n" +
            "          \"internalType\": \"address\",\n" +
            "          \"name\": \"user\",\n" +
            "          \"type\": \"address\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"amount\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"Deposit\",\n" +
            "      \"type\": \"event\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"anonymous\": false,\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"id\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"name\",\n" +
            "          \"type\": \"string\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"EventCreated\",\n" +
            "      \"type\": \"event\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"anonymous\": false,\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"id\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"result\",\n" +
            "          \"type\": \"string\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"EventFinalized\",\n" +
            "      \"type\": \"event\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"anonymous\": false,\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"eventId\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"outcome\",\n" +
            "          \"type\": \"string\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"odds\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"LogOddsUpdated\",\n" +
            "      \"type\": \"event\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"anonymous\": false,\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"indexed\": true,\n" +
            "          \"internalType\": \"address\",\n" +
            "          \"name\": \"participant\",\n" +
            "          \"type\": \"address\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"indexed\": true,\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"eventId\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"ParticipantRegistered\",\n" +
            "      \"type\": \"event\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"anonymous\": false,\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"indexed\": true,\n" +
            "          \"internalType\": \"address\",\n" +
            "          \"name\": \"user\",\n" +
            "          \"type\": \"address\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"indexed\": false,\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"amount\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"Withdrawal\",\n" +
            "      \"type\": \"event\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"address\",\n" +
            "          \"name\": \"\",\n" +
            "          \"type\": \"address\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"balances\",\n" +
            "      \"outputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"stateMutability\": \"view\",\n" +
            "      \"type\": \"function\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"name\",\n" +
            "          \"type\": \"string\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"string[]\",\n" +
            "          \"name\": \"outcomes\",\n" +
            "          \"type\": \"string[]\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"createEvent\",\n" +
            "      \"outputs\": [],\n" +
            "      \"stateMutability\": \"nonpayable\",\n" +
            "      \"type\": \"function\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [],\n" +
            "      \"name\": \"deposit\",\n" +
            "      \"outputs\": [],\n" +
            "      \"stateMutability\": \"payable\",\n" +
            "      \"type\": \"function\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [],\n" +
            "      \"name\": \"eventCounter\",\n" +
            "      \"outputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"stateMutability\": \"view\",\n" +
            "      \"type\": \"function\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"eventParticipants\",\n" +
            "      \"outputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"address\",\n" +
            "          \"name\": \"\",\n" +
            "          \"type\": \"address\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"stateMutability\": \"view\",\n" +
            "      \"type\": \"function\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"events\",\n" +
            "      \"outputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"id\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"name\",\n" +
            "          \"type\": \"string\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"bool\",\n" +
            "          \"name\": \"finalized\",\n" +
            "          \"type\": \"bool\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"result\",\n" +
            "          \"type\": \"string\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"totalPool\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"stateMutability\": \"view\",\n" +
            "      \"type\": \"function\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"eventId\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"result\",\n" +
            "          \"type\": \"string\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"finalizeEvent\",\n" +
            "      \"outputs\": [],\n" +
            "      \"stateMutability\": \"nonpayable\",\n" +
            "      \"type\": \"function\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"finalizedEvents\",\n" +
            "      \"outputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"id\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"name\",\n" +
            "          \"type\": \"string\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"result\",\n" +
            "          \"type\": \"string\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"totalPool\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"stateMutability\": \"view\",\n" +
            "      \"type\": \"function\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"eventId\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"outcome\",\n" +
            "          \"type\": \"string\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"getOdds\",\n" +
            "      \"outputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"stateMutability\": \"view\",\n" +
            "      \"type\": \"function\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"eventId\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"outcome\",\n" +
            "          \"type\": \"string\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"placeBet\",\n" +
            "      \"outputs\": [],\n" +
            "      \"stateMutability\": \"payable\",\n" +
            "      \"type\": \"function\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"address\",\n" +
            "          \"name\": \"\",\n" +
            "          \"type\": \"address\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"name\": \"userBets\",\n" +
            "      \"outputs\": [\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"eventId\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"string\",\n" +
            "          \"name\": \"outcome\",\n" +
            "          \"type\": \"string\"\n" +
            "        },\n" +
            "        {\n" +
            "          \"internalType\": \"uint256\",\n" +
            "          \"name\": \"amount\",\n" +
            "          \"type\": \"uint256\"\n" +
            "        }\n" +
            "      ],\n" +
            "      \"stateMutability\": \"view\",\n" +
            "      \"type\": \"function\"\n" +
            "    },\n" +
            "    {\n" +
            "      \"inputs\": [],\n" +
            "      \"name\": \"withdraw\",\n" +
            "      \"outputs\": [],\n" +
            "      \"stateMutability\": \"nonpayable\",\n" +
            "      \"type\": \"function\"\n" +
            "    }\n" +
            "  ]";

    public static final String BIN = "0x6080604052348015600f57600080fd5b5061293b8061001f6000396000f3fe6080604052600436106100a75760003560e01c80636fea5b94116100645780636fea5b94146101b1578063734d0eea146101ee57806377c87c091461022e5780638068aa6814610257578063a9549f0a14610296578063d0e30db0146102d3576100a7565b80630b791430146100ac57806327e235e3146100ed5780633ccfd60b1461012a57806352c55db9146101415780635e8af7351461016c5780636a03942f14610188575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce919061184a565b6102dd565b6040516100e4959493929190611931565b60405180910390f35b3480156100f957600080fd5b50610114600480360381019061010f91906119f0565b610430565b6040516101219190611a1d565b60405180910390f35b34801561013657600080fd5b5061013f610448565b005b34801561014d57600080fd5b506101566105ac565b6040516101639190611a1d565b60405180910390f35b61018660048036038101906101819190611b6d565b6105b2565b005b34801561019457600080fd5b506101af60048036038101906101aa9190611caf565b610a21565b005b3480156101bd57600080fd5b506101d860048036038101906101d39190611d27565b610bf4565b6040516101e59190611d76565b60405180910390f35b3480156101fa57600080fd5b506102156004803603810190610210919061184a565b610c42565b6040516102259493929190611d91565b60405180910390f35b34801561023a57600080fd5b5061025560048036038101906102509190611b6d565b610d82565b005b34801561026357600080fd5b5061027e60048036038101906102799190611de4565b611256565b60405161028d93929190611e24565b60405180910390f35b3480156102a257600080fd5b506102bd60048036038101906102b89190611b6d565b611325565b6040516102ca9190611a1d565b60405180910390f35b6102db611362565b005b600160205280600052604060002060009150905080600001549080600101805461030690611e91565b80601f016020809104026020016040519081016040528092919081815260200182805461033290611e91565b801561037f5780601f106103545761010080835404028352916020019161037f565b820191906000526020600020905b81548152906001019060200180831161036257829003601f168201915b5050505050908060050160009054906101000a900460ff16908060060180546103a790611e91565b80601f01602080910402602001604051908101604052809291908181526020018280546103d390611e91565b80156104205780601f106103f557610100808354040283529160200191610420565b820191906000526020600020905b81548152906001019060200180831161040357829003601f168201915b5050505050908060070154905085565b60036020528060005260406000206000915090505481565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116104cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c690611f0e565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561055a573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516105a19190611a1d565b60405180910390a250565b60055481565b600034116105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec90611fa0565b60405180910390fd5b60006001600084815260200190815260200160002090508060050160009054906101000a900460ff161561065e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106559061200c565b60405180910390fd5b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d790612078565b60405180910390fd5b600081600301836040516106f491906120d4565b908152602001604051809103902054905060008111610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073f90612137565b60405180910390fd5b34826004018460405161075b91906120d4565b908152602001604051809103902060008282546107789190612186565b92505081905550348260070160008282546107939190612186565b92505081905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040528086815260200185815260200134815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000155602082015181600101908161083c9190612366565b506040820151816002015550506000805b60008087815260200190815260200160002080549050811015610901573373ffffffffffffffffffffffffffffffffffffffff1660008088815260200190815260200160002082815481106108a5576108a4612438565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036108f45760019150610901565b808060010191505061084d565b50806109bf57600080868152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550843373ffffffffffffffffffffffffffffffffffffffff167fa48418fa780c651bef841ca082131ed20bc20c620dd0459bba9ab78550f5d62360405160405180910390a35b6109c88561144b565b3373ffffffffffffffffffffffffffffffffffffffff167f02337a2de26093979fec9e25c4d2c7b6a8bd0c2fd9b3214ded831ac4f3d391e7868634604051610a1293929190611e24565b60405180910390a25050505050565b6001815111610a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5c906124d9565b60405180910390fd5b60006001600060055481526020019081526020016000209050600554816000018190555082816001019081610a9a9190612366565b5081816002019080519060200190610ab3929190611726565b5060008160050160006101000a81548160ff02191690831515021790555060005b8251811015610b9b576718fae27693b4000082600301848381518110610afd57610afc612438565b5b6020026020010151604051610b1291906120d4565b908152602001604051809103902081905550671bc16d674ec8000082600401848381518110610b4457610b43612438565b5b6020026020010151604051610b5991906120d4565b908152602001604051809103902081905550671bc16d674ec80000826007016000828254610b879190612186565b925050819055508080600101915050610ad4565b507f9ce3d6db707bca4ba0eabed8fba1e2c013a1c0bc1132a764170a7854d198c73d60055484604051610bcf9291906124f9565b60405180910390a160056000815480929190610bea90612529565b9190505550505050565b60006020528160005260406000208181548110610c1057600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052806000526040600020600091509050806000015490806001018054610c6b90611e91565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9790611e91565b8015610ce45780601f10610cb957610100808354040283529160200191610ce4565b820191906000526020600020905b815481529060010190602001808311610cc757829003601f168201915b505050505090806002018054610cf990611e91565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2590611e91565b8015610d725780601f10610d4757610100808354040283529160200191610d72565b820191906000526020600020905b815481529060010190602001808311610d5557829003601f168201915b5050505050908060030154905084565b60006001600084815260200190815260200160002090508060050160009054906101000a900460ff1615610deb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de2906125bd565b60405180910390fd5b6000805b8260020180549050811015610e56578380519060200120836002018281548110610e1c57610e1b612438565b5b90600052602060002001604051610e339190612680565b604051809103902003610e495760019150610e56565b8080600101915050610def565b5080610e97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8e906126e3565b60405180910390fd5b60018260050160006101000a81548160ff02191690831515021790555082826006019081610ec59190612366565b5060008260070154905060008360040185604051610ee391906120d4565b9081526020016040518091039020549050600081111561111257600081670de0b6b3a764000084610f149190612703565b610f1e9190612774565b905060005b6000808981526020019081526020016000208054905081101561110f5760008060008a81526020019081526020016000208281548110610f6657610f65612438565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060005b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611100576000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061103357611032612438565b5b906000526020600020906003020190508a8160000154148015611074575089805190602001208160010160405161106a9190612680565b6040518091039020145b156110f257670de0b6b3a76400008582600201546110929190612703565b61109c9190612774565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ea9190612186565b925050819055505b508080600101915050610f96565b50508080600101915050610f23565b50505b604051806080016040528087815260200185600101805461113290611e91565b80601f016020809104026020016040519081016040528092919081815260200182805461115e90611e91565b80156111ab5780601f10611180576101008083540402835291602001916111ab565b820191906000526020600020905b81548152906001019060200180831161118e57829003601f168201915b5050505050815260200186815260200183815250600260008881526020019081526020016000206000820151816000015560208201518160010190816111f19190612366565b5060408201518160020190816112079190612366565b50606082015181600301559050507f6114f784a71fbe68b067dbeb1d4dd3f1d2ad02dc6ced831a7c4f5168fa1c717186866040516112469291906124f9565b60405180910390a1505050505050565b6004602052816000526040600020818154811061127257600080fd5b90600052602060002090600302016000915091505080600001549080600101805461129c90611e91565b80601f01602080910402602001604051908101604052809291908181526020018280546112c890611e91565b80156113155780601f106112ea57610100808354040283529160200191611315565b820191906000526020600020905b8154815290600101906020018083116112f857829003601f168201915b5050505050908060020154905083565b6000600160008481526020019081526020016000206003018260405161134b91906120d4565b908152602001604051809103902054905092915050565b600034116113a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139c90612817565b60405180910390fd5b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113f49190612186565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040516114419190611a1d565b60405180910390a2565b60006001600083815260200190815260200160002090506000816007015490506000805b83600201805490508110156114d8578360040184600201828154811061149857611497612438565b5b906000526020600020016040516114af91906128ba565b908152602001604051809103902054826114c99190612186565b9150808060010191505061146f565b5060006005905060005b846002018054905081101561171e57600085600201828154811061150957611508612438565b5b90600052602060002001805461151e90611e91565b80601f016020809104026020016040519081016040528092919081815260200182805461154a90611e91565b80156115975780601f1061156c57610100808354040283529160200191611597565b820191906000526020600020905b81548152906001019060200180831161157a57829003601f168201915b50505050509050600086600401826040516115b291906120d4565b9081526020016040518091039020549050600081111561168657600081670de0b6b3a7640000886115e39190612703565b6115ed9190612774565b90506000606486606461160091906128d1565b8361160b9190612703565b6116159190612774565b9050670e043da61725000081101561165957670e043da617250000896003018560405161164291906120d4565b90815260200160405180910390208190555061167f565b80896003018560405161166c91906120d4565b9081526020016040518091039020819055505b50506116b4565b671bc16d674ec8000087600301836040516116a191906120d4565b9081526020016040518091039020819055505b7fa18319e08e87fbc9bc32261096e68265c97c77633b5f63f2306861ccc0658015888389600301856040516116e991906120d4565b90815260200160405180910390205460405161170793929190611e24565b60405180910390a1505080806001019150506114e2565b505050505050565b82805482825590600052602060002090810192821561176e579160200282015b8281111561176d57825182908161175d9190612366565b5091602001919060010190611746565b5b50905061177b919061177f565b5090565b5b8082111561179f576000818161179691906117a3565b50600101611780565b5090565b5080546117af90611e91565b6000825580601f106117c157506117e0565b601f0160209004906000526020600020908101906117df91906117e3565b5b50565b5b808211156117fc5760008160009055506001016117e4565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61182781611814565b811461183257600080fd5b50565b6000813590506118448161181e565b92915050565b6000602082840312156118605761185f61180a565b5b600061186e84828501611835565b91505092915050565b61188081611814565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118c05780820151818401526020810190506118a5565b60008484015250505050565b6000601f19601f8301169050919050565b60006118e882611886565b6118f28185611891565b93506119028185602086016118a2565b61190b816118cc565b840191505092915050565b60008115159050919050565b61192b81611916565b82525050565b600060a0820190506119466000830188611877565b818103602083015261195881876118dd565b90506119676040830186611922565b818103606083015261197981856118dd565b90506119886080830184611877565b9695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119bd82611992565b9050919050565b6119cd816119b2565b81146119d857600080fd5b50565b6000813590506119ea816119c4565b92915050565b600060208284031215611a0657611a0561180a565b5b6000611a14848285016119db565b91505092915050565b6000602082019050611a326000830184611877565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611a7a826118cc565b810181811067ffffffffffffffff82111715611a9957611a98611a42565b5b80604052505050565b6000611aac611800565b9050611ab88282611a71565b919050565b600067ffffffffffffffff821115611ad857611ad7611a42565b5b611ae1826118cc565b9050602081019050919050565b82818337600083830152505050565b6000611b10611b0b84611abd565b611aa2565b905082815260208101848484011115611b2c57611b2b611a3d565b5b611b37848285611aee565b509392505050565b600082601f830112611b5457611b53611a38565b5b8135611b64848260208601611afd565b91505092915050565b60008060408385031215611b8457611b8361180a565b5b6000611b9285828601611835565b925050602083013567ffffffffffffffff811115611bb357611bb261180f565b5b611bbf85828601611b3f565b9150509250929050565b600067ffffffffffffffff821115611be457611be3611a42565b5b602082029050602081019050919050565b600080fd5b6000611c0d611c0884611bc9565b611aa2565b90508083825260208201905060208402830185811115611c3057611c2f611bf5565b5b835b81811015611c7757803567ffffffffffffffff811115611c5557611c54611a38565b5b808601611c628982611b3f565b85526020850194505050602081019050611c32565b5050509392505050565b600082601f830112611c9657611c95611a38565b5b8135611ca6848260208601611bfa565b91505092915050565b60008060408385031215611cc657611cc561180a565b5b600083013567ffffffffffffffff811115611ce457611ce361180f565b5b611cf085828601611b3f565b925050602083013567ffffffffffffffff811115611d1157611d1061180f565b5b611d1d85828601611c81565b9150509250929050565b60008060408385031215611d3e57611d3d61180a565b5b6000611d4c85828601611835565b9250506020611d5d85828601611835565b9150509250929050565b611d70816119b2565b82525050565b6000602082019050611d8b6000830184611d67565b92915050565b6000608082019050611da66000830187611877565b8181036020830152611db881866118dd565b90508181036040830152611dcc81856118dd565b9050611ddb6060830184611877565b95945050505050565b60008060408385031215611dfb57611dfa61180a565b5b6000611e09858286016119db565b9250506020611e1a85828601611835565b9150509250929050565b6000606082019050611e396000830186611877565b8181036020830152611e4b81856118dd565b9050611e5a6040830184611877565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ea957607f821691505b602082108103611ebc57611ebb611e62565b5b50919050565b7f4e6f2062616c616e636520746f20776974686472617700000000000000000000600082015250565b6000611ef8601683611891565b9150611f0382611ec2565b602082019050919050565b60006020820190508181036000830152611f2781611eeb565b9050919050565b7f42657420616d6f756e74206d7573742062652067726561746572207468616e2060008201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b6000611f8a602483611891565b9150611f9582611f2e565b604082019050919050565b60006020820190508181036000830152611fb981611f7d565b9050919050565b7f4576656e7420697320616c72656164792066696e616c697a6564000000000000600082015250565b6000611ff6601a83611891565b915061200182611fc0565b602082019050919050565b6000602082019050818103600083015261202581611fe9565b9050919050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000612062601483611891565b915061206d8261202c565b602082019050919050565b6000602082019050818103600083015261209181612055565b9050919050565b600081905092915050565b60006120ae82611886565b6120b88185612098565b93506120c88185602086016118a2565b80840191505092915050565b60006120e082846120a3565b915081905092915050565b7f496e76616c6964206f7574636f6d650000000000000000000000000000000000600082015250565b6000612121600f83611891565b915061212c826120eb565b602082019050919050565b6000602082019050818103600083015261215081612114565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061219182611814565b915061219c83611814565b92508282019050808211156121b4576121b3612157565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261221c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826121df565b61222686836121df565b95508019841693508086168417925050509392505050565b6000819050919050565b600061226361225e61225984611814565b61223e565b611814565b9050919050565b6000819050919050565b61227d83612248565b6122916122898261226a565b8484546121ec565b825550505050565b600090565b6122a6612299565b6122b1818484612274565b505050565b5b818110156122d5576122ca60008261229e565b6001810190506122b7565b5050565b601f82111561231a576122eb816121ba565b6122f4846121cf565b81016020851015612303578190505b61231761230f856121cf565b8301826122b6565b50505b505050565b600082821c905092915050565b600061233d6000198460080261231f565b1980831691505092915050565b6000612356838361232c565b9150826002028217905092915050565b61236f82611886565b67ffffffffffffffff81111561238857612387611a42565b5b6123928254611e91565b61239d8282856122d9565b600060209050601f8311600181146123d057600084156123be578287015190505b6123c8858261234a565b865550612430565b601f1984166123de866121ba565b60005b82811015612406578489015182556001820191506020850194506020810190506123e1565b86831015612423578489015161241f601f89168261232c565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4576656e74206d7573742068617665206174206c656173742074776f206f757460008201527f636f6d6573000000000000000000000000000000000000000000000000000000602082015250565b60006124c3602583611891565b91506124ce82612467565b604082019050919050565b600060208201905081810360008301526124f2816124b6565b9050919050565b600060408201905061250e6000830185611877565b818103602083015261252081846118dd565b90509392505050565b600061253482611814565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361256657612565612157565b5b600182019050919050565b7f4576656e7420616c72656164792066696e616c697a6564000000000000000000600082015250565b60006125a7601783611891565b91506125b282612571565b602082019050919050565b600060208201905081810360008301526125d68161259a565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461260a81611e91565b61261481866125dd565b9450600182166000811461262f576001811461264457612677565b60ff1983168652811515820286019350612677565b61264d856125e8565b60005b8381101561266f57815481890152600182019150602081019050612650565b838801955050505b50505092915050565b600061268c82846125fd565b915081905092915050565b7f496e76616c696420726573756c74000000000000000000000000000000000000600082015250565b60006126cd600e83611891565b91506126d882612697565b602082019050919050565b600060208201905081810360008301526126fc816126c0565b9050919050565b600061270e82611814565b915061271983611814565b925082820261272781611814565b9150828204841483151761273e5761273d612157565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061277f82611814565b915061278a83611814565b92508261279a57612799612745565b5b828204905092915050565b7f4465706f736974206d7573742062652067726561746572207468616e207a657260008201527f6f00000000000000000000000000000000000000000000000000000000000000602082015250565b6000612801602183611891565b915061280c826127a5565b604082019050919050565b60006020820190508181036000830152612830816127f4565b9050919050565b6000815461284481611e91565b61284e8186612098565b94506001821660008114612869576001811461287e576128b1565b60ff19831686528115158202860193506128b1565b612887856121ba565b60005b838110156128a95781548189015260018201915060208101905061288a565b838801955050505b50505092915050565b60006128c68284612837565b915081905092915050565b60006128dc82611814565b91506128e783611814565b92508282039050818111156128ff576128fe612157565b5b9291505056fea2646970667358221220b1758521a5d28d9c5ced5afa84590e868dbb6f9cb97374dffde49444c87cacda64736f6c634300081b0033";

    // Constructor to load the contract
    protected BettingSystemDTO(String contractAddress, Web3j web3j, org.web3j.tx.TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BIN, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static BettingSystemDTO load(String contractAddress, Web3j web3j, org.web3j.tx.TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new BettingSystemDTO(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    // Deploy method
    public static RemoteCall<BettingSystemDTO> deploy(Web3j web3j, org.web3j.tx.TransactionManager transactionManager, ContractGasProvider gasProvider, BigInteger initialValue) {
        return deployRemoteCall(BettingSystemDTO.class, web3j, transactionManager, gasProvider, BIN, ABI, initialValue);
    }

    // Example method: createEvent
    public RemoteCall<TransactionReceipt> createEvent(String name, List<String> outcomes) {
        List<Type> inputParameters = Arrays.asList(
                new Utf8String(name),
                new org.web3j.abi.datatypes.DynamicArray<>(
                        Utf8String.class,
                        outcomes.stream().map(Utf8String::new).toList()
                )
        );
        return executeRemoteCallTransaction(createFunction("createEvent", inputParameters, Collections.emptyList()));
    }

    // Example method: getOdds
    public RemoteCall<BigInteger> getOdds(BigInteger eventId, String outcome) {
        List<Type> inputParameters = Arrays.asList(
                new Uint256(eventId),
                new Utf8String(outcome)
        );
        return executeRemoteCallSingleValueReturn(createFunction("getOdds", inputParameters, Collections.singletonList(new TypeReference<Uint256>() {})), BigInteger.class);
    }

    // Example method: placeBet
    public RemoteCall<TransactionReceipt> placeBet(BigInteger eventId, String outcome, BigInteger amount) {
        List<Type> inputParameters = Arrays.asList(
                new Uint256(eventId),
                new Utf8String(outcome),
                new Uint256(amount)
        );
        return executeRemoteCallTransaction(createFunction("placeBet", inputParameters, Collections.emptyList()));
    }

    // Example method: finalizeEvent
    public RemoteCall<TransactionReceipt> finalizeEvent(BigInteger eventId, String result) {
        List<Type> inputParameters = Arrays.asList(
                new Uint256(eventId),
                new Utf8String(result)
        );
        return executeRemoteCallTransaction(createFunction("finalizeEvent", inputParameters, Collections.emptyList()));
    }

    // Example method: deposit
    public RemoteCall<TransactionReceipt> deposit(BigInteger amount) {
        List<Type> inputParameters = Collections.singletonList(new Uint256(amount));
        return executeRemoteCallTransaction(createFunction("deposit", inputParameters, Collections.emptyList()));
    }

    // Example method: withdraw
    public RemoteCall<TransactionReceipt> withdraw() {
        return executeRemoteCallTransaction(createFunction("withdraw", Collections.emptyList(), Collections.emptyList()));
    }

    // Utility method to create a Solidity function
    private Function createFunction(String methodName, List<Type> inputParameters, List<TypeReference<?>> outputParameters) {
        return new Function(methodName, inputParameters, outputParameters);
    }
}
